---

# Import ModuleBuilder tasks from a specific PowerShell module using the build
# task's alias. Wildcard * can be used to specify all tasks that has a similar
# prefix and or suffix. The module contain the task must be added as a required
# module in the file RequiredModules.psd1.
ModuleBuildTasks:
  PSFactory.GitHubTasks:
    - '*.ib.tasks'
  DscResource.Test:
    - 'Task.*'

# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:

  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - Invoke_HQRM_Tests_Stop_On_Fail

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Convert_Pester_Coverage
    - Pester_if_Code_Coverage_Under_Threshold
    - hqrmtest

  merge:
    - Merge_CodeCoverage_Files

  publish:
    #- publish_nupkg_to_gallery  # Deploy using Nuget
    - publish_module_to_gallery # Deploy using cmdlet Publish-Module
    - Publish_release_to_GitHub

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""
